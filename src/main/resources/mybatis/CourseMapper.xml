<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="raky.dao.CourseMapper" >
  <resultMap id="getListResultMap" type="Course" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="COURSE_TYPE" property="courseType" jdbcType="INTEGER" />
    <result column="COURSE_NAME" property="courseName" jdbcType="VARCHAR" />
    <result column="COURSE_MEMO" property="courseMemo" jdbcType="VARCHAR" />
    <result column="PRIORITY" property="priority" jdbcType="INTEGER" />
    <result column="DELETED" property="deleted" jdbcType="INTEGER" />
  </resultMap>
  <sql id="condition" >
    <where>
      <if test="id != null"> and ID = #{id}</if>
      <if test="courseType != null and courseType !=''"> and COURSE_TYPE = #{courseType}</if>
      <if test="courseName != null and courseName !=''"> and COURSE_NAME like concat('%',#{courseName},'%')</if>
    </where>
  </sql>
  <select id="getList" resultMap="getListResultMap" parameterType="java.lang.Long" >
    select * from COURSE <include refid="condition"/>
  </select>

  <select id="getPageList" resultMap="getListResultMap"  parameterType="Course">
    select * from COURSE <include refid="condition" />
    limit #{offset}, #{limit}
  </select>
  <select id="getOne" parameterType="java.lang.Long" resultMap="getListResultMap">
        select * from COURSE where ID =#{id}
  </select>
  <select id="getCount" parameterType="Course" resultType="java.lang.Integer"  >
    select count(ID) from COURSE <include refid="condition" />
  </select>
  <delete id="delete" parameterType="java.lang.Long" >
    update COURSE set DELETED = 0
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteAll" parameterType="java.util.List" >
    update COURSE set DELETED = 0 where ID in
    <foreach collection="list" item="ids" open="(" close=")" separator=",">
      #{ids,jdbcType=VARCHAR}
    </foreach>
  </delete>

  <insert id="insert" parameterType="Course" >
    insert into COURSE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="courseType != null" >
        COURSE_TYPE,
      </if>
      <if test="courseName != null" >
        COURSE_NAME,
      </if>
      <if test="courseMemo != null" >
        COURSE_MEMO,
      </if>
      <if test="priority != null" >
        PRIORITY,
      </if>
      <if test="deleted != null" >
        DELETED,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="courseType != null" >
        #{courseType,jdbcType=INTEGER},
      </if>
      <if test="courseName != null" >
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseMemo != null" >
        #{courseMemo,jdbcType=VARCHAR},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="Course" >
    update COURSE
    <set >
      <if test="courseType != null" >
        COURSE_TYPE = #{courseType,jdbcType=INTEGER},
      </if>
      <if test="courseName != null" >
        COURSE_NAME = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseMemo != null" >
        COURSE_MEMO = #{courseMemo,jdbcType=VARCHAR},
      </if>
      <if test="priority != null" >
        PRIORITY = #{priority,jdbcType=INTEGER},
      </if>
      <if test="deleted != null" >
        DELETED = #{deleted,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>